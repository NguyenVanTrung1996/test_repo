/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -m -a knightsadaptor -i externalcontrol.h -l Knights::ExternalControl /home/library/hungpd/np/knights-2.5.0/src/org.kde.Knights.xml
 *
 * qdbusxml2cpp is Copyright (C) 2012 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "knightsadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class KnightsAdaptor
 */

KnightsAdaptor::KnightsAdaptor(Knights::ExternalControl *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

KnightsAdaptor::~KnightsAdaptor()
{
    // destructor
}

void KnightsAdaptor::abort()
{
    // handle method call org.kde.Knights.abort
    parent()->abort();
}

void KnightsAdaptor::adjourn()
{
    // handle method call org.kde.Knights.adjourn
    parent()->adjourn();
}

void KnightsAdaptor::movePiece(const QString &move)
{
    // handle method call org.kde.Knights.movePiece
    parent()->movePiece(move);
}

void KnightsAdaptor::offerDraw()
{
    // handle method call org.kde.Knights.offerDraw
    parent()->offerDraw();
}

void KnightsAdaptor::pauseGame()
{
    // handle method call org.kde.Knights.pauseGame
    parent()->pauseGame();
}

void KnightsAdaptor::resumeGame()
{
    // handle method call org.kde.Knights.resumeGame
    parent()->resumeGame();
}

void KnightsAdaptor::undo()
{
    // handle method call org.kde.Knights.undo
    parent()->undo();
}


#include "knightsadaptor.moc"
