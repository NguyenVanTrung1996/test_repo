// generated 2006/10/14 15:24:37 EDT by luigi@tuxy.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- chesslan.glade
// for gtk 2.10.6 and gtkmm 2.10.2
//
// Please modify the corresponding derived classes in ./src/notebook1.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "notebook1_glade.hh"
#include "frame1.hh"
#include "statusbar1.hh"
#include "treeview1.hh"
#include "toolbar1.hh"

notebook1_glade::notebook1_glade(GlademmData *gmm_data
)
{  notebook1 = this;
   frame1 = Gtk::manage(new class frame1(gmm_data));
   statusbar1 = Gtk::manage(new class statusbar1(gmm_data));
   vbox4 = Gtk::manage(new class Gtk::VBox(false, 0));
   label2 = Gtk::manage(new class Gtk::Label(_("White")));
   label4 = Gtk::manage(new class Gtk::Label(_("0:00")));
   hseparator1 = Gtk::manage(new class Gtk::HSeparator());
   label3 = Gtk::manage(new class Gtk::Label(_("Black")));
   label5 = Gtk::manage(new class Gtk::Label(_("0:00")));
   vbox3 = Gtk::manage(new class Gtk::VBox(true, 3));
   treeview1 = Gtk::manage(new class treeview1(gmm_data));
   scrolledwindow1 = Gtk::manage(new class Gtk::ScrolledWindow());
   toolbar1 = Gtk::manage(new class toolbar1(gmm_data));
   vbox2 = Gtk::manage(new class Gtk::VBox(false, 0));
   hbox1 = Gtk::manage(new class Gtk::HBox(false, 0));
   nlabel1 = Gtk::manage(new class Gtk::Label(_("Game 1")));
   vbox4->pack_start(*frame1);
   vbox4->pack_start(*statusbar1, Gtk::PACK_SHRINK, 0);
   label2->set_size_request(10,-1);
   label2->set_alignment(0.5,0.5);
   label2->set_padding(0,0);
   label2->set_justify(Gtk::JUSTIFY_LEFT);
   label2->set_line_wrap(false);
   label2->set_use_markup(false);
   label2->set_selectable(false);
   label4->set_size_request(10,-1);
   label4->set_alignment(0.5,0.5);
   label4->set_padding(0,0);
   label4->set_justify(Gtk::JUSTIFY_LEFT);
   label4->set_line_wrap(false);
   label4->set_use_markup(false);
   label4->set_selectable(false);
   label3->set_size_request(10,-1);
   label3->set_alignment(0.5,0.5);
   label3->set_padding(0,0);
   label3->set_justify(Gtk::JUSTIFY_LEFT);
   label3->set_line_wrap(false);
   label3->set_use_markup(false);
   label3->set_selectable(false);
   label5->set_size_request(10,-1);
   label5->set_alignment(0.5,0.5);
   label5->set_padding(0,0);
   label5->set_justify(Gtk::JUSTIFY_LEFT);
   label5->set_line_wrap(false);
   label5->set_use_markup(false);
   label5->set_selectable(false);
   vbox3->set_border_width(2);
   vbox3->pack_start(*label2, Gtk::PACK_SHRINK, 0);
   vbox3->pack_start(*label4, Gtk::PACK_SHRINK, 0);
   vbox3->pack_start(*hseparator1, Gtk::PACK_SHRINK, 0);
   vbox3->pack_start(*label3, Gtk::PACK_SHRINK, 0);
   vbox3->pack_start(*label5, Gtk::PACK_SHRINK, 0);
   scrolledwindow1->set_flags(Gtk::CAN_FOCUS);
   scrolledwindow1->set_shadow_type(Gtk::SHADOW_NONE);
   scrolledwindow1->set_policy(Gtk::POLICY_ALWAYS, Gtk::POLICY_ALWAYS);
   scrolledwindow1->property_window_placement().set_value(Gtk::CORNER_TOP_LEFT);
   scrolledwindow1->add(*treeview1);
   vbox2->pack_start(*scrolledwindow1);
   vbox2->pack_start(*toolbar1, Gtk::PACK_SHRINK, 2);
   hbox1->pack_start(*vbox4);
   hbox1->pack_start(*vbox3);
   hbox1->pack_start(*vbox2);
   nlabel1->set_alignment(0.5,0.5);
   nlabel1->set_padding(0,0);
   nlabel1->set_justify(Gtk::JUSTIFY_LEFT);
   nlabel1->set_line_wrap(false);
   nlabel1->set_use_markup(false);
   nlabel1->set_selectable(false);
   notebook1->set_flags(Gtk::CAN_FOCUS);
   notebook1->set_show_tabs(true);
   notebook1->set_show_border(true);
   notebook1->set_tab_pos(Gtk::POS_TOP);
   notebook1->set_scrollable(false);
   notebook1->append_page(*hbox1, *nlabel1);
   notebook1->pages().back().set_tab_label_packing(false, true, Gtk::PACK_START);
   vbox4->show();
   label2->show();
   label4->show();
   hseparator1->show();
   label3->show();
   label5->show();
   vbox3->show();
   scrolledwindow1->show();
   vbox2->show();
   hbox1->show();
   nlabel1->show();
   notebook1->show();
}

notebook1_glade::~notebook1_glade()
{  
}
