// generated 2006/10/14 15:24:36 EDT by luigi@tuxy.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- chesslan.glade
// for gtk 2.10.6 and gtkmm 2.10.2
//
// Please modify the corresponding derived classes in ./src/menubar1.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "menubar1_glade.hh"
#include <gtk/gtkimagemenuitem.h>

menubar1_glade::menubar1_glade(GlademmData *gmm_data
)
{  menubar1 = this;
   new1 = NULL;
   open1 = NULL;
   save1 = NULL;
   save_as1 = NULL;
   separatormenuitem1 = NULL;
   quit1 = NULL;
   file1_menu = Gtk::manage(new class Gtk::Menu());
   file1 = NULL;
   image7 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-preferences"), Gtk::IconSize(1)));
   preferences1 = NULL;
   settings1_menu = Gtk::manage(new class Gtk::Menu());
   settings1 = NULL;
   image8 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-dialog-info"), Gtk::IconSize(1)));
   about1 = NULL;
   help1_menu = Gtk::manage(new class Gtk::Menu());
   help1 = NULL;
   
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_File"), *file1_menu));
   file1 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Settings"), *settings1_menu));
   settings1 = (Gtk::MenuItem *)&menubar1->items().back();
   
   menubar1->items().push_back(Gtk::Menu_Helpers::MenuElem(_("_Help"), *help1_menu));
   help1 = (Gtk::MenuItem *)&menubar1->items().back();
   
   file1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-new")));
   new1 = (Gtk::ImageMenuItem *)&file1_menu->items().back();
   
   file1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-open")));
   open1 = (Gtk::ImageMenuItem *)&file1_menu->items().back();
   
   file1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-save")));
   save1 = (Gtk::ImageMenuItem *)&file1_menu->items().back();
   
   file1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-save-as")));
   save_as1 = (Gtk::ImageMenuItem *)&file1_menu->items().back();
   
   file1_menu->items().push_back(Gtk::Menu_Helpers::SeparatorElem());
   separatormenuitem1 = (Gtk::MenuItem *)&file1_menu->items().back();
   
   file1_menu->items().push_back(Gtk::Menu_Helpers::StockMenuElem(Gtk::StockID("gtk-quit")));
   quit1 = (Gtk::ImageMenuItem *)&file1_menu->items().back();
   
   settings1_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("_Preferences"), *image7));
   preferences1 = (Gtk::ImageMenuItem *)&settings1_menu->items().back();
   
   help1_menu->items().push_back(Gtk::Menu_Helpers::ImageMenuElem(_("_About"), *image8));
   about1 = (Gtk::ImageMenuItem *)&help1_menu->items().back();
   image7->set_alignment(0.5,0.5);
   image7->set_padding(0,0);
   image8->set_alignment(0.5,0.5);
   image8->set_padding(0,0);
   new1->show();
   open1->show();
   save1->show();
   save_as1->show();
   separatormenuitem1->show();
   quit1->show();
   file1->show();
   image7->show();
   preferences1->show();
   settings1->show();
   image8->show();
   about1->show();
   help1->show();
   menubar1->show();
   new1->signal_activate().connect(SigC::slot(*this, &menubar1_glade::on_new1_activate), false);
   open1->signal_activate().connect(SigC::slot(*this, &menubar1_glade::on_open1_activate), false);
   save1->signal_activate().connect(SigC::slot(*this, &menubar1_glade::on_save1_activate), false);
   save_as1->signal_activate().connect(SigC::slot(*this, &menubar1_glade::on_save_as1_activate), false);
   quit1->signal_activate().connect(SigC::slot(*this, &menubar1_glade::on_quit1_activate), false);
   preferences1->signal_activate().connect(SigC::slot(*this, &menubar1_glade::on_preferences1_activate), false);
   about1->signal_activate().connect(SigC::slot(*this, &menubar1_glade::on_about1_activate), false);
}

menubar1_glade::~menubar1_glade()
{  
}
