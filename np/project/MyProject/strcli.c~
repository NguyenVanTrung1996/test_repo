#include "Client.h"
#include "message.h"

#define MAXLENGTH 100
#define MAXLINE 100

char menu();

void
str_cli(FILE *fp, int sockfd)
{
  char	*sendline, recvline[MAXLINE];
  message_t newMesg;
  //char buff[MAXLINE];
  int i;
  int n;
  //FILE *fout;
  //char filename[MAXLENGTH] = "return.txt";

  while (fgets(sendline, MAXLINE, fp) != NULL) {



    if (send(sockfd, sendline, strlen(sendline), 0) != strlen(sendline)) {
      printf("send() sent a different number of bytes than expected\n");
    }

    if (recv(sockfd, recvline, MAXLINE, 0) < 0) {
      printf("str_cli: server terminated prematurely\n");
      exit(1);
    }
    /*
      if(strcmp(sendline,"\n") == 0) { // Modify
      printf("Client finished.\n");// Modifyf
      return;
      }// Modify
    */

    char ch;
    while(1)
      {
  	ch = menu();
	 switch(ch)
	  {
	  case '1':
	    printf("\n\nSIGN IN\n");
	    continue;

	  case '2':
	    printf("\n\nSIGN UP\n");
	    continue;

	  case '3':
	    printf("Exit\n", ch);
      newMesg = message_construct(SIGNOUT, "0", "0", "0", "0");
      sendline = message_toString(newMesg);
      printf("%s\n", sendline);

      if (send(sockfd, sendline, strlen(sendline), 0) != strlen(sendline)) {
        printf("send() sent a different number of bytes than expected\n");
      }

      if (recv(sockfd, recvline, MAXLINE, 0) < 0) {
        printf("str_cli: server terminated prematurely\n");
        exit(1);
      }
      fputs(recvline, stdout);
	    printf("I'm done!\n");
      exit(0);
	    break;

	  default:
	    printf("Wrong option! Please choose again\n");
	    continue;
	  }
	break;
      }

    recvline[strlen(recvline)-1] = '\0';
    fputs(recvline, stdout);
    printf("\n");
  }
	
}

char menu()
{
  char ch;
  printf("\t\tConsole Chess\n\nCreated by Phung Nhat Huy and Pham Duy Hung\nAS K55 HEDSPI\n\n");
  printf("1. SIGN IN.\n");
  printf("2. SIGN UP.\n");
  printf("3. EXIT.\n");
  printf("\tBan chon?\n");
  ch = getchar();
  char ch1;
  while((ch1 = getchar()) != '\n');
  printf("Processing...\n");
  return ch;
}

